/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import dao.NhanVienDAO;
import entity.NhanVien;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.text.ParseException;
//import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Trong Phu
 */
public class NhanVien_View extends javax.swing.JPanel {

    int index;
    NhanVienDAO daoNV = new NhanVienDAO();
    DefaultTableModel model = new DefaultTableModel();
    List<NhanVien> list = new ArrayList<>();
    private NhanVienDAO nvd = new NhanVienDAO();

    /**
     * Creates new form NhanVien_View
     */
    public NhanVien_View() {
        initComponents();
        this.fillToTable(daoNV.selectAll());

//        String header[] = {"", "", "", "", "", "", "", ""};
//        model.setColumnIdentifiers(header);
        list = nvd.selectAll();
        loadTB();
        setSoTrang();
    }

    public void loadTB() {
        //tblQLNV.setModel(model);
        List<NhanVien> lstNV = nvd.phantrang(tienLui);
        model = (DefaultTableModel) tblQLNV.getModel();
        model.setRowCount(0);
        for (NhanVien x : nvd.phantrang(tienLui)) {
            Date ngaySinh = x.getNgaySinh();
            // Định dạng ngày theo "ngày/tháng/năm"
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            dateFormat.format(ngaySinh);
            Object roww[] = new Object[]{
                //                x.getMaNV(), x.getTenNV(), x.getNgaySinh(), x.getDiaChi(), x.getSdt(), x.getEmail(), x.getChucVu().getTenCV(), x.getGioiTinh(), x.getDangNhap().getUserName(), x.getDangNhap().getPassWord(), x.getTrangThai() == 0 ? "Đi làm" : "Không đi làm"
                x.getNhanVien_id(), x.getHoTen(), x.getgioitinh(), dateFormat.format(ngaySinh), x.getDiaChi(), x.getSdt(), x.getTrangThai(), x.getVaiTro()
            };
            model.addRow(roww);
        }

    }

    public void loadTBTimKiem() {
        //tblQLNV.setModel(model);
        String id = txtTimKiem.getText();
        List<NhanVien> lstNV = nvd.timkiem(id);
        model = (DefaultTableModel) tblQLNV.getModel();
        model.setRowCount(0);
        for (NhanVien x : lstNV) {
            Object roww[] = new Object[]{
                //                x.getMaNV(), x.getTenNV(), x.getNgaySinh(), x.getDiaChi(), x.getSdt(), x.getEmail(), x.getChucVu().getTenCV(), x.getGioiTinh(), x.getDangNhap().getUserName(), x.getDangNhap().getPassWord(), x.getTrangThai() == 0 ? "Đi làm" : "Không đi làm"
                x.getNhanVien_id(), x.getHoTen(), x.getgioitinh(), x.getNgaySinh(), x.getDiaChi(), x.getSdt(), x.getTrangThai(), x.getVaiTro()
            };
            model.addRow(roww);
        }
    }

    public static void main(String[] args) {

        JFrame frame = new JFrame("Quản lý nhân viên view");

        NhanVien_View nhanVienView = new NhanVien_View();

        frame.add(nhanVienView);

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblAnhNhanVien = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtIDNhanVien = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        rdoQuanLy = new javax.swing.JRadioButton();
        rdoDangLam = new javax.swing.JRadioButton();
        rdoDaNghiViec = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQLNV = new javax.swing.JTable();
        btnPreview = new javax.swing.JButton();
        lblSoTrang = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1145, 683));

        jPanel1.setBackground(new java.awt.Color(255, 251, 246));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Form điền thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("ID Nhân Viên");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Họ tên");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Giới tính");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Ngày sinh");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Địa chỉ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("SĐT");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Trạng thái");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Mật khẩu");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Vai trò");

        lblAnhNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/No-Image.svg.png"))); // NOI18N
        lblAnhNhanVien.setText("ANH");
        lblAnhNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhNhanVienMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Ảnh");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        buttonGroup3.add(rdoNhanVien);
        rdoNhanVien.setText("Nhân viên");

        buttonGroup3.add(rdoQuanLy);
        rdoQuanLy.setText("Quản lý");
        rdoQuanLy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoQuanLyActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoDangLam);
        rdoDangLam.setText("Đang làm");

        buttonGroup2.add(rdoDaNghiViec);
        rdoDaNghiViec.setText("Đã nghỉ việc");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton1.setBackground(new java.awt.Color(0, 204, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Create.png"))); // NOI18N
        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh (1).png"))); // NOI18N
        jButton4.setText("Làm mới");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Edit.png"))); // NOI18N
        jButton2.setText("Sửa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton1)))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton4});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton1)
                .addGap(46, 46, 46)
                .addComponent(jButton2)
                .addGap(43, 43, 43)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton4});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAnhNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel11)))
                .addGap(124, 124, 124)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIDNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdoNam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rdoNu)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdoDangLam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rdoDaNghiViec))
                                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdoNhanVien)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoQuanLy)))
                                .addGap(90, 90, 90)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtIDNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(rdoDangLam)
                            .addComponent(rdoDaNghiViec))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(rdoNhanVien)
                            .addComponent(rdoQuanLy))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblAnhNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(27, 27, 27))))
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("QUẢN LÝ NHÂN VIÊN");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.gray), "Danh sách nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblQLNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Nhân Viên", "Họ tên", "Giới tính", "Ngày sinh", "Địa chỉ", "SĐT", "Trạng thái", "Vai trò"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQLNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQLNV);

        btnPreview.setText("<");
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        lblSoTrang.setText("1");

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPreview)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSoTrang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSoTrang)
                    .addComponent(btnNext)
                    .addComponent(btnPreview)
                    .addComponent(btnLast)
                    .addComponent(btnFirst))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(474, 474, 474))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdoQuanLyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoQuanLyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoQuanLyActionPerformed

    private void lblAnhNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhNhanVienMouseClicked
        // TODO add your handling code here:
        this.fillAnh();
    }//GEN-LAST:event_lblAnhNhanVienMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            for (NhanVien nv : nvd.selectAll()) {
                if (nv.getSdt().trim().equalsIgnoreCase(txtSDT.getText())) {
                    JOptionPane.showMessageDialog(this, "Trùng số điện thoại");
                    return;
                }
            }
            int row = tblQLNV.getSelectedRow();
            NhanVien nv = list.get(row);
            String id = nv.getNhanVien_id();
            NhanVien viewModel = new NhanVien();
            SimpleDateFormat fomater = new SimpleDateFormat("dd-MM-yyyy");
            Date ngaySinh = null;
            String ngaySinhC = txtNgaySinh.getText();
            try {
                ngaySinh = fomater.parse(ngaySinhC);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "adu");
                e.printStackTrace();
            }
            viewModel.setAnh(lblAnhNhanVien.getToolTipText());
            viewModel.setNhanVien_id(txtIDNhanVien.getText());
            viewModel.setHoTen(txtHoTen.getText());
            //viewModel.setNgaySinh(Date.valueOf(txtNgaySinh.getText()));
            viewModel.setNgaySinh(ngaySinh);
            boolean gt = true;
            if (rdoNam.isSelected()) {
                viewModel.setGioiTinh(true);
            } else {
                viewModel.setGioiTinh(false);
            }
            viewModel.setDiaChi(txtDiaChi.getText());
            viewModel.setSdt(txtSDT.getText());
            if (rdoDangLam.isSelected()) {
                viewModel.setTrangThai("Hoạt động");
            } else {
                viewModel.setTrangThai("Nghỉ việc");
            }
            viewModel.setMatkhau(txtMatKhau.getText());
            if (rdoQuanLy.isSelected()) {
                viewModel.setVaiTro("Quản lý");
            } else {
                viewModel.setVaiTro("Nhân viên");
            }
            if (txtIDNhanVien.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được để trống mã nhân viên");
                return;
            }
          
            if (txtHoTen.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được trống Tên");
                txtHoTen.requestFocus();
                return;
            }

            if (!checkNgay()) {
                txtNgaySinh.requestFocus();
                return;
            }

            if (!checksdt()) {
                txtSDT.requestFocus();
                return;
            }

            if (!checkten()) {
                txtHoTen.requestFocus();
                return;
            }

            if (txtMatKhau.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vùi lòng nhập mật khẩu");
                txtMatKhau.requestFocus();
                return;
            }

            if (txtDiaChi.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được trống địa chỉ");

                txtDiaChi.requestFocus();

                return;
            }

            if (txtSDT.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vùi lòng nhập SDT");
                txtSDT.requestFocus();
                return;}
            nvd.update(viewModel, id);
            JOptionPane.showMessageDialog(this, "Sửa nhân viên thành công!!");
            setSoTrang();
            fillToTable(nvd.phantrang(tienLui));
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi sửa nhân viên");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public void xoaNV() throws HeadlessException {
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn xoá nhân viên?", "XOÁ NHÂN VIÊN", JOptionPane.YES_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            int row = tblQLNV.getSelectedRow();
            NhanVien nv = list.get(row);
            if (row < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng");
            } else {
                String id = nv.getNhanVien_id();
                JOptionPane.showMessageDialog(this, nvd.deleteNV(id));
                
                list = nvd.phantrang(tienLui);
                setSoTrang();
                loadTB();
            }
        }
    }

    private void tblQLNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLNVMouseClicked
        // TODO add your handling code here:
        int row = tblQLNV.getSelectedRow();
        fillData(row);
    }//GEN-LAST:event_tblQLNVMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.addNV1();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        // TODO add your handling code here:
        preview();
    }//GEN-LAST:event_btnPreviewActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        loadTBTimKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed
    private void addNV1() throws HeadlessException {
        // TODO add your handling code here:
        try {
             if (txtIDNhanVien.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được để trống mã nhân viên");
                return;
            }
            for (NhanVien nv : nvd.selectAll()) {
                if (nv.getNhanVien_id().trim().equalsIgnoreCase(txtIDNhanVien.getText())) {
                    JOptionPane.showMessageDialog(this, "Trùng mã nhân viên");
                    return;
                }
            }
            
             if (txtIDNhanVien.getText().length() > 7) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên không được quá 7 ký tự!!");
                return;
            }
             if (txtHoTen.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được trống Tên");
                txtHoTen.requestFocus();
                return;
            }
             
             if (!checkten()) {
                txtHoTen.requestFocus();
                return;
            }
             
             
           
           
            
           
            for (NhanVien nv : nvd.selectAll()) {
                if (nv.getSdt().trim().equalsIgnoreCase(txtSDT.getText())) {
                    JOptionPane.showMessageDialog(this, "Trùng số điện thoại");
                    return;
                }
            }
           

            if (!checkNgay()) {
                txtNgaySinh.requestFocus();
                return;
            }

            if (!checksdt()) {
                txtSDT.requestFocus();
                return;
            }

            

            if (txtMatKhau.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vùi lòng nhập mật khẩu");
                txtMatKhau.requestFocus();
                return;
            }

            if (txtDiaChi.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không được trống địa chỉ");

                txtDiaChi.requestFocus();

                return;
            }
            
            NhanVien viewModel = new NhanVien();
            viewModel.setNhanVien_id(txtIDNhanVien.getText());
            viewModel.setHoTen(txtHoTen.getText());
            
            boolean gt = true; 
            SimpleDateFormat fomater = new SimpleDateFormat("dd-MM-yyyy");
            Date ngaySinh = null;
            viewModel.setAnh(lblAnhNhanVien.getToolTipText());
            String ngaySinhC = txtNgaySinh.getText();
            try {
                ngaySinh = fomater.parse(ngaySinhC);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi định dạng ngày sinh");
               // e.printStackTrace();
                return;
            }
            viewModel.setNgaySinh(ngaySinh);
            if (rdoNam.isSelected()) {
                viewModel.setGioiTinh(true);
            } else {
                viewModel.setGioiTinh(false);
            }
            viewModel.setDiaChi(txtDiaChi.getText());
            viewModel.setSdt(txtSDT.getText());
            if (rdoDangLam.isSelected()) {
                viewModel.setTrangThai("Hoạt động");
            } else {
                viewModel.setTrangThai("Nghỉ việc");
            }
            viewModel.setMatkhau(txtMatKhau.getText());
            if (rdoQuanLy.isSelected()) {
                viewModel.setVaiTro("Quản lý");
            } else {
                viewModel.setVaiTro("Nhân viên");
            }

            if (txtSDT.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vùi lòng nhập SDT");
                txtSDT.requestFocus();
                return;
            } else if (nvd.addNH(viewModel) > 0) {

                list = nvd.phantrang(tienLui);
                loadTB();
                setSoTrang();
                JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!!");
            } else {
                JOptionPane.showMessageDialog(this, "Lỗi thêm nhân viên!!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi thêm nhân viên!!");
        }

    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnhNhanVien;
    private javax.swing.JLabel lblSoTrang;
    private javax.swing.JRadioButton rdoDaNghiViec;
    private javax.swing.JRadioButton rdoDangLam;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoQuanLy;
    private javax.swing.JTable tblQLNV;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtIDNhanVien;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void fillToTable(List<NhanVien> listNV) {
        DefaultTableModel model = (DefaultTableModel) tblQLNV.getModel();
        model.setRowCount(0);
        
        for (NhanVien nv : listNV) {
            Date ngaySinh = nv.getNgaySinh();
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
           dateFormat.format(ngaySinh);
            model.addRow(new Object[]{
                nv.getNhanVien_id(),
                nv.getHoTen(),
                nv.isGioiTinh() ? "Nam" : "Nữ",
               dateFormat.format(ngaySinh),
                nv.getDiaChi(),
                nv.getSdt(),
                nv.getTrangThai(),
                nv.getVaiTro()
            });
        }

    }

    private void fillData(int index) {
        NhanVien nv = nvd.phantrang(tienLui).get(index);
        Date ngaySinh = nv.getNgaySinh();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        dateFormat.format(ngaySinh);
        txtIDNhanVien.setText(nv.getNhanVien_id());
        txtHoTen.setText(nv.getHoTen());
        txtDiaChi.setText(nv.getDiaChi());
        txtMatKhau.setText(nv.getMatkhau());
        txtSDT.setText(nv.getSdt());
        txtNgaySinh.setText(dateFormat.format(ngaySinh));
        if (nv.getTrangThai().equalsIgnoreCase("Hoạt động")) {
            rdoDangLam.setSelected(true);
        } else {
            rdoDaNghiViec.setSelected(true);
        }
        if (nv.getVaiTro().equalsIgnoreCase("Quản lý")) {
            rdoQuanLy.setSelected(true);
        } else {
            rdoNhanVien.setSelected(true);
        }

        if (nv.isGioiTinh()) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        ImageIcon icon = new ImageIcon(nv.getAnh());
        Image image = icon.getImage().getScaledInstance(150, 200, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(image);
        lblAnhNhanVien.setIcon(resizedIcon);
        lblAnhNhanVien.setToolTipText(nv.getAnh());
    }

    public boolean checksdt() {

        if (txtSDT.getText().matches("[0,+84][\\d]{9}")) {
            return true;
        }
        JOptionPane.showMessageDialog(this, "vui lòng nhập đúng số điện thoại");

        return false;
    }

    public boolean checkNgay() {
        SimpleDateFormat s = new SimpleDateFormat();
        s.applyPattern("dd-MM-yyyy");
        try {
            Date ngay = s.parse(txtNgaySinh.getText().toString());
            return true;
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Sai đinh dang ngay sinh");
            return false;
        }
    }

    public boolean checkten() {
        String paramater = "^[AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬBCDĐEÈẺẼÉẸÊỀỂỄẾỆFGHIÌỈĨÍỊJKLMNOÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢPQRSTUÙỦŨÚỤƯỪỬỮỨỰVWXYỲỶỸÝỴZ][aàảãáạăằẳẵắặâầẩẫấậbcdđeèẻẽéẹêềểễếệfghiìỉĩíịjklmnoòỏõóọôồổỗốộơờởỡớợpqrstuùủũúụưừửữứựvwxyỳỷỹýỵz]+ [AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬBCDĐEÈẺẼÉẸÊỀỂỄẾỆFGHIÌỈĨÍỊJKLMNOÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢPQRSTUÙỦŨÚỤƯỪỬỮỨỰVWXYỲỶỸÝỴZ][aàảãáạăằẳẵắặâầẩẫấậbcdđeèẻẽéẹêềểễếệfghiìỉĩíịjklmnoòỏõóọôồổỗốộơờởỡớợpqrstuùủũúụưừửữứựvwxyỳỷỹýỵz]+(?: [AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬBCDĐEÈẺẼÉẸÊỀỂỄẾỆFGHIÌỈĨÍỊJKLMNOÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢPQRSTUÙỦŨÚỤƯỪỬỮỨỰVWXYỲỶỸÝỴZ][aàảãáạăằẳẵắặâầẩẫấậbcdđeèẻẽéẹêềểễếệfghiìỉĩíịjklmnoòỏõóọôồổỗốộơờởỡớợpqrstuùủũúụưừửữứựvwxyỳỷỹýỵz]*)*";

        if (txtHoTen.getText().matches(paramater)) {
            return true;
        }
        if (txtHoTen.getText().length() > 2) {
            return true;
        }
        JOptionPane.showMessageDialog(this, "Tên Sai Định Dạng ( Phải Là chữ và lớn hơn 2 kí Tự)");

        return false;
    }

//    private void fillAnh() {
//        JFileChooser jfileSelected = new JFileChooser();
//        int result = jfileSelected.showOpenDialog(null);
//        if (result == jfileSelected.APPROVE_OPTION) {
//
//            File file = jfileSelected.getSelectedFile();
//            String duongDanAnh = file.getAbsolutePath();
//            ImageIcon icon = new ImageIcon(duongDanAnh);
//            // Tạo một đối tượng ImageIcon từ tệp hình ảnh
//
//            // Đặt kích thước cho hình ảnh
//            Image image = icon.getImage().getScaledInstance(150, 200, Image.SCALE_SMOOTH);
//            ImageIcon resizedIcon = new ImageIcon(image);
//
//            lblAnhNhanVien.setIcon(resizedIcon);
//            lblAnhNhanVien.setToolTipText(duongDanAnh);
//        }
//
//    }
    
    
    private void fillAnh() {
    JFileChooser jfileSelected = new JFileChooser();
    int result = jfileSelected.showOpenDialog(null);

    if (result == jfileSelected.APPROVE_OPTION) {
        File file = jfileSelected.getSelectedFile();
        String duongDanAnh = file.getAbsolutePath();

        // Kiểm tra xem tệp có phải là hình ảnh hay không
        try {
            BufferedImage image = ImageIO.read(file);
            if (image == null) {
                JOptionPane.showMessageDialog(this, "Ảnh không hợp lệ!!!");
                return;
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "CẢnh không hợp lệ!!!");
            return;
        }

        ImageIcon icon = new ImageIcon(duongDanAnh);
        Image image = icon.getImage().getScaledInstance(150, 200, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(image);

        lblAnhNhanVien.setIcon(resizedIcon);
        lblAnhNhanVien.setToolTipText(duongDanAnh);
    }
}


    private void clearForm() {
        txtIDNhanVien.setText("");
        txtHoTen.setText("");
        rdoNam.setSelected(true);
        txtNgaySinh.setText("");
        txtDiaChi.setText("");
        txtSDT.setText("");
        rdoNhanVien.setSelected(true);
        rdoDangLam.setSelected(true);
        txtMatKhau.setText("");
        URL url = NhanVien.class.getResource("/img/No-Image.svg.png");
        ImageIcon icon = new ImageIcon(url);
        lblAnhNhanVien.setIcon(icon);

    }
    int tienLui = 0;
    double soTrangLe;
    int soTrang;
    int viTriTrang = 1;

    private void setSoTrang() {
        soTrangLe = Math.ceil((double) nvd.selectAll().size() / 5);
        soTrang = (int) soTrangLe;
        lblSoTrang.setText(viTriTrang + "/" + soTrang);
    }

    private void preview() {
        if (viTriTrang > 1) {
            viTriTrang--;
            tienLui -= 5;
            setSoTrang();
            fillToTable(nvd.phantrang(tienLui));
        } else {
            last();
        }
    }

    private void next() {
        if (viTriTrang < soTrang) {
            viTriTrang++;
            tienLui += 5;
            setSoTrang();
            fillToTable(nvd.phantrang(tienLui));
        } else {
            first();
        }

    }

    private void first() {
        viTriTrang = 1;
        tienLui = 0;
        setSoTrang();
        fillToTable(nvd.phantrang(tienLui));
    }

    private void last() {
        viTriTrang = soTrang;
        tienLui = soTrang * 5 - 5;
        setSoTrang();
        fillToTable(nvd.phantrang(tienLui));
    }
}
